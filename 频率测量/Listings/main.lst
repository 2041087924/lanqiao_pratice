C51 COMPILER V9.60.0.0   MAIN                                                              03/15/2022 01:25:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\APP\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.h>
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5            
   6          uchar code number[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0x8e,0xff};
   7          uint count_f=0;
   8          uint dat_f=0;
   9          uchar count_t=0;
  10          
  11          void display();
  12          void display_bit(uchar pos , uchar dat);
  13          void SMGdelayms(uchar ms);
  14          void Timer01_Init();
  15          void System_Init();
  16          
  17          void main()
  18          {
  19   1        System_Init();
  20   1        Timer01_Init();
  21   1        while(1)
  22   1        {
  23   2          display();
  24   2        }
  25   1      }
  26          
  27          void System_Init()
  28          {
  29   1        P2 = (P2 & 0x1f) | 0x80;
  30   1        P0=0xff;
  31   1        P2 = (P2 & 0x1f) | 0xa0;
  32   1        P0=0x00;
  33   1        P2 = (P2 & 0x1f) | 0xc0;
  34   1        P0=0xff;
  35   1        P2 = (P2 & 0x1f) | 0xe0;
  36   1        P0=0xff;
  37   1      }
  38          void Timer01_Init()  //定时器0用来计数，定时器1用来计时
  39          {
  40   1        TMOD = 0X16;
  41   1        
  42   1        TH0 = 255;  //8位自动重装
  43   1        TL0 = 255;
  44   1        
  45   1        TH1 = (65536-50000)/256;
  46   1        TL1 = (65536-50000)%256;
  47   1        
  48   1        TR0 = 1;  //定时器0开始计数
  49   1        TR1 = 1;  //定时器1开始计时
  50   1        ET0 = 1;  //定时器0使能中断打开
  51   1        ET1 = 1;  //定时器1使能中断打开
  52   1        EA = 1;   //使能总中断打开
  53   1      }
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              03/15/2022 01:25:40 PAGE 2   

  55          void Timer0() interrupt 1
  56          {
  57   1        count_f++;
  58   1      }
  59          void Timer1() interrupt 3
  60          {
  61   1        TH1 = (65536-50000)/256; //重新装载计时初值
  62   1        TL1 = (65536-50000)%256;
  63   1        count_t++;
  64   1        if(count_t==20)
  65   1        {
  66   2          count_t=0;
  67   2          dat_f=count_f;
  68   2          count_f=0;
  69   2        }
  70   1      }
  71          void SMGdelayms(uchar ms)
  72          {
  73   1        uint i,j;
  74   1        for(i=ms;i>0;i--)
  75   1          for(j=815;j>0;j--);
  76   1      }
  77          void display_bit(uchar pos , uchar dat)
  78          {
  79   1        P0 = 0xff;  //数码管消隐
  80   1        P2 = (P2 & 0x1f) | 0xc0;
  81   1        P0=0x01 << pos;
  82   1        P2 = (P2 & 0x1f) | 0xe0;
  83   1        P0=number[dat];
  84   1      }
  85          void display()
  86          {
  87   1        display_bit(0,11);
  88   1        SMGdelayms(1);
  89   1        display_bit(1,12);
  90   1        SMGdelayms(1);
  91   1        display_bit(2,12);
  92   1        SMGdelayms(1);
  93   1        if(dat_f > 9999)
  94   1        {
  95   2          display_bit(3,dat_f / 10000);
  96   2          SMGdelayms(1);
  97   2        }
  98   1        if(dat_f > 999)
  99   1        {
 100   2          display_bit(4,(dat_f / 1000) %10);
 101   2          SMGdelayms(1);
 102   2        }
 103   1        if(dat_f > 99)
 104   1        {
 105   2          display_bit(5,(dat_f / 100) % 10);
 106   2          SMGdelayms(1);
 107   2        }
 108   1        if(dat_f > 9)
 109   1        {
 110   2          display_bit(6,(dat_f / 10) %10);
 111   2          SMGdelayms(1);
 112   2        }
 113   1        display_bit(7,dat_f % 10);
 114   1        SMGdelayms(1);
 115   1      }

C51 COMPILER V9.60.0.0   MAIN                                                              03/15/2022 01:25:40 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
